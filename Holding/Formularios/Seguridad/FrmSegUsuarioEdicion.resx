<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Error.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACqqqoDmZmZCpubmxKfn58YnZ2dIqWlpSWioqIvoqKiN6KiojeioqI3oqKiN6Ki
        ojeioqI3oqKiN6KiojeioqI3oqKiN6KiojegoKA2o6OjKp6eniWkpKQfoqKiFpmZmQ+fn58If39/AgAA
        AAAAAAAAAAAAAAAAAAAAAAAAmZmZCqWlpVuioqKYo6OjtaOjo8Sjo6PTpKSk2KOiouCmoJPnq52D562c
        duiwmm3pspln6rOZZeqzmWXqsZln6rCab+msnHvoqJ6M56SjoOWkpKTbo6Oj16Ojo8+jo6PBo6OjraOj
        o4yjo6M9f39/AgAAAAAAAAAAAAAAAAAAAAC/v78EpqamLqKiolOkpKRrpp6KnKuWa96wklb3tZBD/riR
        QP+6k0L/vJRD/72VRf++lkX/v5ZG/7+WRv++lkX/vZVF/7yUQ/+6k0L/h51P/kmtbPtIrm76bqqExKOj
        o3ukpKRlpaWlSqOjoxwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqoY0Tq2INsOwijn+s408/7aP
        Pv+5kUH/u5ND/72VRf+/l0b/wZhI/8KZSf/Cmkn/wppJ/8KZSf/BmEj/v5dG/72VRf9QrV//MrRn/zK0
        Z/9NrF38sIo6srCLNzcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf38ABKmDMrCshjX/sIk4/7OM
        O/+2jz7/uZFB/7uUQ/++lkX/wJhI/8KaSf/Em0v/xpxM/8edTf/HnU3/xpxM/8SbS//Cmkn/wJhH/06x
        ZP8vuWz/L7ls/0yvYv+zjDv/r4k4/q2GNqWyfzMUAAAAAAAAAAAAAAAAAAAAAAAAAACmhSwXqoU0/66I
        N/+xizr/tI49/7iQQP+7k0L/vpZF/8CYSP/Dmkr/xpxM/8ieTv/Kn0//yqBQ/8qgUP/Kn0//yJ5O/8ac
        TP/Dmkr/TbVp/yy9cv8svXL/SrNm/7SNPf+xizr/rog2/6qENMQAAAAAAAAAAAAAAAAAAAAAAAAAAL9/
        AASshjX5r4k4/7OMO/+2jz7/uZJB/72VRP/Al0f/w5pK/8adTf/Jn0//y6FR/82iUv/Oo1P/zqNT/82i
        Uv/LoVH/yZ9P/8acTP9LuW3/KcJ3/ynCd/9It2v/to8+/7OMO/+viTj/rIY07QAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAK2HNsCwijn/tI08/7eQP/+7k0L/vpZG/8KZSf/FnEz/yZ5P/8yhUf/Oo1T/0KVV/9Km
        V/+UsWT/YLtv/1+6bv9fum3/Xrls/zLDeP8mxnz/JsZ8/zHCd/9YtGf/V7Nm/1WyZf9QsmX2JMZ8WgAA
        AAAAAAAAAAAAAAAAAAAAAAAArYc1UbGLOf+1jj3/uJFA/7yUQ/+/l0f/w5pK/8edTf/LoFD/zqNT/9Gl
        Vv/UqFj/1ala/zLHff8kyoD/JMqA/yTKgP8kyoD/JMqA/yTKgP8kyoD/JMqA/yTKgP8kyoD/JMqA/yTK
        gP8jyYDrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtpFCqLmURv+5kUH/vJRE/8CYR//Em0v/yJ5O/8yh
        Uf/PpFT/06dY/9aqWv/YrF3/M82F/yLOhP8izoT/Is6E/yLOhP8izoT/Is6E/yLOhP8izoT/Is6E/yLO
        hP8izoT/Is6E/yjOh+8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACqfyoGvJhMpL6aTf+8lUT/wJhH/8Sb
        S//Ink7/zKFR/9CkVf/TqFj/16tb/9quXv9+x3//UNaT/1DVkv9P1ZL/T9WS/y3Si/8g0Yj/INGI/y3S
        i/9O1ZL/RdiW7kLameZC25nmPdmVlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvZpLZcKg
        VfLBmkv/xJtK/8ieTv/MoVH/0adZ/+O+eP/xzIr/99OS//bSkv/vyoj/4bx1/9GmV//LoVH/Q8h+/x7T
        i/8e04v/QMmA+8CcT4bMmTMFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAu5BEHsWhV7HFnlH/yJ9Q/+PAe//72Jr//9eW///Xlv//15b//9eW///Xlv//15b/+9eZ/+PA
        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
        Af//gAH//4AB//+AAf//wAP//+AH///4D/8=
</value>
  </data>
</root>